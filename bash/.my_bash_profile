
# BASH goodness without which I go a bit... crazy.

case "$OSTYPE" in
  darwin*) OS="OSX" ;;
  linux*)  OS="LINUX" ;;
  *)       OS="Unknown";;
esac

export SVN_EDITOR="vim"
export HISTIGNORE="&:ls:[bf]g:exit:svn update:clear:cd:cd ..:gp:git pull"
export HISTCONTROL=ignoreboth:erasedups
export HISTFILESIZE=1000000000
export HISTSIZE=1000000

export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=128m"

shopt -s histappend

# This section stolen from https://github.com/mathiasbynens/dotfiles/blob/master/.aliases
# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
        colorflag="--color"
else # OS X `ls`
        colorflag="-G"
fi

alias s3ls="aws s3 ls"

alias dc="docker-compose"

# ack has a weird name on osx for some reason
# alias ack="ack-5.16"

# force tmux to use 256 colors
alias tmux="tmux -2"

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag} -F"

# better tree
alias tl="tree -nhs | less"

alias zmvn="mvn -DskipTests=true clean dependency:go-offline verify package"

# from: http://natelandau.com/my-mac-osx-bash_profile/
#   ---------------------------
#   6.  NETWORKING
#   ---------------------------

alias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address
alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
alias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs

#   cleanupDS:  Recursively delete .DS_Store files
#   -------------------------------------------------------------------
alias cleanupDS="find . -type f -name '*.DS_Store' -ls -delete"

# random time savers
alias fucking="sudo"
alias gcm="git checkout master"
alias gco="git checkout"
alias gp="git pull"
alias gl="git lg"
alias gca="git commit -a"
alias gpom="git push origin master"
alias gcdf="git clean -d -f"
alias gd="git diff --no-prefix"

alias gti=git

# move around
alias work="pushd ~/work"
alias repos="pushd ~/repos"
alias samza="pushd ~/repos/samza"
alias dotfiles="pushd ~/dotfiles"
alias downloads="pushd ~/downloads"

gitbranch() {
  git branch --track $1 origin/$1
}

alias pu="pushd"
alias po="popd"

# Moving around & all that jazz
alias back='cd $OLDPWD'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."

# hadoop hadoop hadoop
runspecifictests() {
  rm -f results.txt
  for t in $@; do mvn -Dtest=$t test | tee -a results.txt;done
}

alias hgrepFail="grep Failures results.txt | grep \"in \""

alias decodeaws="aws sts decode-authorization-message --encoded-message "

# clone common repos
alias clonesamza="git clone https://git-wip-us.apache.org/repos/asf/samza.git"
alias clonedotfiles="git clone git@github.com:jghoman/dotfiles.git"

alias asfauth="svn --username jghoman co https://svn.apache.org/repos/infra/infrastructure/trunk/subversion/authorization/"
alias asfincubator="svn --username jghoman co https://svn.apache.org/repos/asf/incubator/public/trunk incubator"
alias asfpublishincubator="open https://cms.apache.org/incubator/publish"
alias asfboard="svn checkout --username jghoman https://svn.apache.org/repos/private/foundation/board"
alias asfhadoopwrite="git clone https://git-wip-us.apache.org/repos/asf/hadoop && pushd hadoop && git branch --track branch-2 origin/branch-2 && popd"

# Docker aliases
dockerenv() {
  eval "$(docker-machine env default)"
}

zdcleancreated() {
  docker ps -a | tail -n +2 | sed -n 's/  */ /gp' | cut -d " " -f 1 | xargs docker rm
}

zdcleanimages() {
  docker images | grep "<none>" | sed -n 's/  */ /gp' | cut -d " " -f 3 | xargs docker rmi
}

# detach tmux client
alias detachtmux="tmux attach -d"

# I seem to have a pathologic need to know this...
alias jarsinm2="find ~/.m2 -name *.jar | wc -l"

# nyan in docker
alias nyan="docker run -it supertest2014/nyan"

qsmvn() {
  mvn archetype:generate -DgroupId=${1} -DartifactId=${2} -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
}

zdirssi() {
  docker run -it --name my-irssi -e TERM -u $(id -u):$(id -g) \
    --rm=true \
    -v $HOME/.irssi:/home/user/.irssi:ro \
    -v /etc/localtime:/etc/localtime:ro \
    irssi
}

# Piping is fun
alias hn1="head -n1"
alias tn1="tail -n1"

# Vim, all day  long
alias v="vim"

# useful functions
crgogitignore() {
  echo "target/*
Cargo.lock" >> .gitignore
  git add .gitignore
}

mvnqs() {
  mvn archetype:generate -DgroupId=${1} -DartifactId=${2} -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
}

asfclone() {
  git clone https://github.com/apache/${1}.git
  pushd ${1}
  git remote add asf git://git.apache.org/${1}
  git remote add asfwrite https://git-wip-us.apache.org/repos/asf/${1}

  popd
}

easyfind() {
  find . -name "${1}"
}
alias f='easyfind'

# credit: http://blog.sanctum.geek.nz/watching-with-tmux/
function tmw {
  tmux split-window -dv "$*"
}

# http://stackoverflow.com/a/2831173
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

function gbin { 
  echo branch \($1\) has these commits and \($(parse_git_branch)\) does not 
  git log ..$1 --no-merges --format='%h | Author:%an | Date:%ad | %s' --date=local
}

function gbout { 
  echo branch \($(parse_git_branch)\) has these commits and \($1\) does not 
  git log $1.. --no-merges --format='%h | Author:%an | Date:%ad | %s' --date=local
}

# cl - combine cd and ls into one line
alias lc="cl"
cl () {
   if [ $# = 0 ]; then
       cd && ls
  else
       cd "$*" && ls
   fi
}

# hg - combine history and grep into one command
hg () {
   if [ $# = 0 ]; then
      history
   else
      history | grep "$*"
   fi
}

# split window horizontally and run htop
function thtop {
  tmux split-window -d "htop"
}

# xtract - this one has been making all the rounds
# xtract archives -- usage: xtract <file>
# Renaming to xtract cause it's faster to autocomplete.
xtract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar e $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip "$1" ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *) echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Use vimpager if it's available
if type vimpager >/dev/null 2>&1; then
  export PAGER=vimpager
  alias less=$PAGER
  alias zless=$PAGER
fi

# http://alias.sh/python-simple-http-server-1
# HTTP serve the current directory to 0.0.0.0 and safety port 8765
# Detect python version
ret=`python -c 'import sys; print("%i" % (sys.hexversion<0x03000000))'`
if [ $ret -eq 0 ]; then    # Python version is >= 3
    alias pyhttp='python -m http.server 8765'
else    # Python version is < 3
    alias pyhttp='python -m SimpleHTTPServer 8765'
fi

# http://alias.sh/whats-gobbling-memory
alias memhog='ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15'

# fetch all the gits!
alias fetchrepos='pushd ~/repos && for d in */; do pushd $d; if [ -d ".git" ]; then git fetch; git gc; fi; popd; done && popd'

# Convert markdown to html quick
alias m2html='python -m markdown'

# http://alias.sh/copy-folder-remote-server
function putout() {
  tar czf - ${1} | ssh ${2} tar xzf - -C ${3}
}

function puttmux() {
  scp -i ~/.aws/jakob.pem .tmux.conf ubuntu@${1}:~/
}

function ec2ssh() {
  ssh -i ~/.aws/jakob.pem ubuntu@${1}
}

# http://alias.sh/copy-public-key-remote-machine-dependency-less
function authme() {
  ssh "$1" 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' \
    < ~/.ssh/id_dsa.pub
}

source ~/dotfiles/bash/bash-git-prompt/prompt-colors.sh
Time12a="\$(date +%H:%M)"
Hostname="\$(hostname -s)"
GIT_PROMPT_END_USER=" \n${Hostname} ${White}${Time12a}${ResetColor} $ "
source ~/dotfiles/bash/bash-git-prompt/gitprompt.sh

# Set Java homes if they are available
if [ "$OS" = "OSX" ]; then
  /usr/libexec/java_home -v 1.6 &> /dev/null
  if [ $? -eq 0 ]; then
    JAVA6_HOME=$(/usr/libexec/java_home -v 1.6)
  fi

  /usr/libexec/java_home -v 1.7 &> /dev/null
  if [ $? -eq 0 ]; then
    JAVA7_HOME=$(/usr/libexec/java_home -v 1.7)
  fi

  /usr/libexec/java_home -v 1.8 &> /dev/null
  if [ $? -eq 0 ]; then
    JAVA8_HOME=$(/usr/libexec/java_home -v 1.8)
  fi
fi

if [ ! -d ~/gocode ]; then
  mkdir ~/gocode
fi

export GOPATH=~/gocode

# add up a sum of numbers: | tr -s " " | cut -d " " -f 3 | awk '{s+=$1} END { print s}'

#export JAVA_TOOL_OPTIONS="-Djava.awt.headless=true"

export AWS_REGIONS="us-east-1 us-west-2 us-west-1 eu-west-1"

function venv()
{
  if [ -d "venv" ]; then
    source venv/bin/activate
  fi
}

alias py3venv="virtualenv -p python3 venv"

# Add python bins if they're around
if [ -d ~/Library/Python/2.7/bin ]; then
  export PATH=$PATH:~/Library/Python/2.7/bin
fi

if [ -d ~/spark/latest ]; then
  export PATH=~/spark/latest/bin:$PATH
  export SPARK_HOME=~/spark/latest
  export IPYTHON=1
fi

function kill_parental_controld() {
  sudo pkill -STOP parentalcontrolsd
}

# In case dotnet is listening
export DOTNET_CLI_TELEMETRY_OPTOUT=1

